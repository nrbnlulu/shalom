{% include "macros" %}

{% set fragment_name = fragment.context.context.name %}
{% set fragment_selections = fragment.context.context.type_defs %}
{% set root_type = fragment.context.context.root_type %}

// GENERATED CODE - DO NOT MODIFY BY HAND
// Fragment: {{fragment_name}}

import 'package:shalom_core/shalom_core.dart';
{% for import_alias, import_path in extra_imports | items %}
import '{{import_path}}' as {{import_alias}};
{% endfor %}

{% if fragment.context.context.used_fragments | length > 0 %}
// Fragment imports
{% for used_fragment in fragment.context.context.used_fragments %}
import '{{used_fragment.get_fragment_name() | lower}}.dart';
{% endfor %}
{% endif %}

{# Generate data classes for all selections in the fragment using macros #}
{% for selection_name, selection in fragment_selections | items %}
{% if selection.kind == "Object" %}
{{ generate_data_class(type_name_for_selection(selection), selection.selections) }}

{% endif %}
{% endfor %}

{# Generate main fragment fromCache method #}
{% if root_type %}
{{ generate_from_cache_method(type_name_for_selection(root_type), root_type.selections) }}

{# Generate helper fromCache methods for nested objects #}
{% for selection_name, selection in fragment_selections | items %}
{% if selection.kind == "Object" and selection_name != fragment_name %}
{{ generate_from_cache_method(type_name_for_selection(selection), selection.selections) }}

{% endif %}
{% endfor %}
{% endif %}
